{"version":3,"sources":["test.js"],"names":["describe","it","model","setLeftValue","setRightValue","assert","equal","range","style","left","right","MouseMove","inputLeft","zIndex","inputRight"],"mappings":";AAEAA,SAAS,uEAAwE,WAC7EC,GAAG,2IAA4I,WAC7IC,MAAMC,aAAa,GAAG,IAAK,GAAI,IAC/BD,MAAME,cAAc,GAAG,IAAK,GAAI,IAChCC,OAAOC,MAAMC,MAAMC,MAAMC,KAAM,OAC/BJ,OAAOC,MAAMC,MAAMC,MAAME,MAAO,SAElCT,GAAG,uJAAwJ,WACzJC,MAAMC,aAAa,EAAE,KAAM,IAAK,KAChCD,MAAME,cAAc,EAAE,KAAM,IAAK,KACjCC,OAAOC,MAAMC,MAAMC,MAAMC,KAAM,YAC/BJ,OAAOC,MAAMC,MAAMC,MAAME,MAAO,cAElCT,GAAG,2IAA4I,WAC7IC,MAAMC,aAAa,GAAK,KAAM,EAAG,GACjCD,MAAME,cAAc,GAAK,KAAM,EAAG,GAClCC,OAAOC,MAAMC,MAAMC,MAAMC,KAAM,OAC/BJ,OAAOC,MAAMC,MAAMC,MAAME,MAAO,SAElCT,GAAG,kJAAmJ,WACpJC,MAAMC,aAAa,EAAE,GAAI,EAAG,IAC5BD,MAAME,cAAc,EAAE,GAAI,EAAG,IAC7BC,OAAOC,MAAMC,MAAMC,MAAMC,KAAM,YAC/BJ,OAAOC,MAAMC,MAAMC,MAAME,MAAO,gBAGtCV,SAAS,uEAAwE,WAC/EC,GAAG,iIAAkI,WACnIC,MAAMS,UAAU,EAAG,GAAI,IAAK,QAAS,IAAK,IAAK,KAC/CN,OAAOC,MAAMM,UAAUJ,MAAMK,OAAQ,GACrCR,OAAOC,MAAMQ,WAAWN,MAAMK,OAAQ,KAExCZ,GAAG,2HAA4H,WAC7HC,MAAMS,UAAU,EAAG,EAAG,GAAI,QAAS,EAAG,GAAI,IAC1CN,OAAOC,MAAMM,UAAUJ,MAAMK,OAAQ,GACrCR,OAAOC,MAAMQ,WAAWN,MAAMK,OAAQ,KAExCZ,GAAG,gIAAiI,WAClIC,MAAMS,UAAU,EAAG,GAAI,IAAK,QAAS,GAAI,GAAI,KAC7CN,OAAOC,MAAMQ,WAAWN,MAAMK,OAAQ,GACtCR,OAAOC,MAAMM,UAAUJ,MAAMK,OAAQ,KAEvCZ,GAAG,iIAAkI,WACnIC,MAAMS,UAAU,EAAG,EAAG,IAAK,QAAS,IAAK,IAAK,KAC9CN,OAAOC,MAAMQ,WAAWN,MAAMK,OAAQ,GACtCR,OAAOC,MAAMM,UAAUJ,MAAMK,OAAQ,KAEvCZ,GAAG,8HAA+H,WAChIC,MAAMS,UAAU,EAAG,EAAG,IAAK,QAAS,GAAI,GAAI,KAC5CN,OAAOC,MAAMM,UAAUJ,MAAMK,OAAQ,GACrCR,OAAOC,MAAMQ,WAAWN,MAAMK,OAAQ","file":"test.880805a0.js","sourceRoot":"..\\test","sourcesContent":["// //MODEL\r\n\r\ndescribe(\"Тест z-index inputLeft и inputRight при перемещении мыши по слайдеру\", function() {\r\n    it(\"при min = 10, max = 100, sliders.width = 372.828(26vw), valueLeft = 37 и valueRight = 73 range.style.left = 30%; range.style.right = 30%\", function () {\r\n      model.setLeftValue(10,100, 37, 73)\r\n      model.setRightValue(10,100, 37, 73)\r\n      assert.equal(range.style.left, 30 + '%')\r\n      assert.equal(range.style.right, 30 + '%')\r\n    })\r\n    it(\"при min = 0, max = 1500, sliders.width = 372.828(26vw), valueLeft = 200 и valueRight = 620 range.style.left = 13.3333%; range.style.right = 58.6667%\", function () {\r\n      model.setLeftValue(0,1500, 200, 620)\r\n      model.setRightValue(0,1500, 200, 620)\r\n      assert.equal(range.style.left, 13.3333 + '%')\r\n      assert.equal(range.style.right, 58.6667 + '%')\r\n    })\r\n    it(\"при min = 0.5, max = 10.5, sliders.width = 372.828(26vw), valueLeft = 2 и valueRight = 4 range.style.left = 15%; range.style.right = 65%\", function () {\r\n      model.setLeftValue(0.5, 10.5, 2, 4)\r\n      model.setRightValue(0.5, 10.5, 2, 4)\r\n      assert.equal(range.style.left, 15 + '%')\r\n      assert.equal(range.style.right, 65 + '%')\r\n    })\r\n    it(\"при min = 1, max = 20, sliders.width = 372.828(26vw), valueLeft = 7 и valueRight = 15 range.style.left = 31.5789%; range.style.right = 26.3158%\", function () {\r\n      model.setLeftValue(1,20, 7, 15)\r\n      model.setRightValue(1,20, 7, 15)\r\n      assert.equal(range.style.left, 31.5789 + '%')\r\n      assert.equal(range.style.right, 26.3158 + '%')\r\n    })\r\n})\r\ndescribe(\"Тест z-index inputLeft и inputRight при перемещении мыши по слайдеру\", function() {\r\n  it(\"при min = 30, max = 380, sliders.width = 372.828, valueLeft = 117, valueRight = 380 и mousePosition = 147 inputLeft.zIndex = 2\", function () {\r\n    model.MouseMove(1, 30, 380, 372.828, 117, 380, 147)\r\n    assert.equal(inputLeft.style.zIndex, 2)\r\n    assert.equal(inputRight.style.zIndex, 1)\r\n  });\r\n  it(\"при min = 0, max = 55, sliders.width = 206.953, valueLeft = 5, valueRight = 25 и mousePosition = 66 inputLeft.zIndex = 1\", function () {\r\n    model.MouseMove(1, 0, 55, 206.953, 5, 25, 66)\r\n    assert.equal(inputLeft.style.zIndex, 1)\r\n    assert.equal(inputRight.style.zIndex, 2)\r\n  });\r\n  it(\"при min = 10, max = 100, sliders.width = 372.828, valueLeft = 20, valueRight = 50 и mousePosition = 120 inputRight.zIndex = 2\", function () {\r\n    model.MouseMove(1, 10, 100, 372.828, 20, 50, 120)\r\n    assert.equal(inputRight.style.zIndex, 2)\r\n    assert.equal(inputLeft.style.zIndex, 1)\r\n  });\r\n  it(\"при min = 0, max = 200, sliders.width = 372.828, valueLeft = 100, valueRight = 200 и mousePosition = 135 inputRight.zIndex = 1\", function () {\r\n    model.MouseMove(1, 0, 200, 372.828, 100, 200, 135)\r\n    assert.equal(inputRight.style.zIndex, 1)\r\n    assert.equal(inputLeft.style.zIndex, 2)\r\n  });\r\n  it(\"при min = 0, max = 100, sliders.width = 372.828, valueLeft = 15, valueRight = 50 и mousePosition = 235 inputLeft.zIndex = 1\", function () {\r\n    model.MouseMove(1, 0, 100, 372.828, 15, 50, 235)\r\n    assert.equal(inputLeft.style.zIndex, 1)\r\n    assert.equal(inputRight.style.zIndex, 2)\r\n  });\r\n});\r\n\r\n//VIEW\r\n\r\n// describe(\"тест шкалы single-range\", function() {\r\n//   it(\"при min = 300 и max = 600 шкала имеет значения: 300, 375, 450, 525, 600\", function () {\r\n//     view.scaleSingle(300, 600)\r\n//     assert.equal($(\".first-ins\").text(), 300)\r\n//     assert.equal($(\".second-ins\").text(), 375)\r\n//     assert.equal($(\".third-ins\").text(), 450)\r\n//     assert.equal($(\".fourth-ins\").text(), 525)\r\n//     assert.equal($(\".fifth-ins\").text(), 600)\r\n//   });\r\n//   it(\"при min = 0 и max = 100 шкала имеет значения: 0, 25, 50, 75, 100\", function () {\r\n//     view.scaleSingle(0, 100)\r\n//     assert.equal($(\".first-ins\").text(), 0)\r\n//     assert.equal($(\".second-ins\").text(), 25)\r\n//     assert.equal($(\".third-ins\").text(), 50)\r\n//     assert.equal($(\".fourth-ins\").text(), 75)\r\n//     assert.equal($(\".fifth-ins\").text(), 100)\r\n//   });\r\n//   it(\"при min = -500 и max = 1000 шкала имеет значения: -500, -125, 250, 625, 1000\", function () {\r\n//     view.scaleSingle(-500, 1000)\r\n//     assert.equal($(\".first-ins\").text(), -500)\r\n//     assert.equal($(\".second-ins\").text(), -125)\r\n//     assert.equal($(\".third-ins\").text(), 250)\r\n//     assert.equal($(\".fourth-ins\").text(), 625)\r\n//     assert.equal($(\".fifth-ins\").text(), 1000)\r\n//   });\r\n//   it(\"при min = 30 и max = 380 шкала имеет значения: 30, 117, 205, 293, 380\", function () {\r\n//     view.scaleSingle(30, 380)\r\n//     assert.equal($(\".first-ins\").text(), 30)\r\n//     assert.equal($(\".second-ins\").text(), 117)\r\n//     assert.equal($(\".third-ins\").text(), 205)\r\n//     assert.equal($(\".fourth-ins\").text(), 293)\r\n//     assert.equal($(\".fifth-ins\").text(), 380)\r\n//   });\r\n// });\r\n\r\n// describe(\"тест шкалы multi-range\", function() {\r\n//   it(\"при min = 300 и max = 600 шкала имеет значения: 300, 375, 450, 525, 600\", function () {\r\n//     view.scaleMulti(300, 600)\r\n//     assert.equal($(\".multi-first-ins\").text(), 300)\r\n//     assert.equal($(\".multi-second-ins\").text(), 375)\r\n//     assert.equal($(\".multi-third-ins\").text(), 450)\r\n//     assert.equal($(\".multi-fourth-ins\").text(), 525)\r\n//     assert.equal($(\".multi-fifth-ins\").text(), 600)\r\n//   });\r\n//   it(\"при min = 0 и max = 100 шкала имеет значения: 0, 25, 50, 75, 100\", function () {\r\n//     view.scaleMulti(0, 100)\r\n//     assert.equal($(\".multi-first-ins\").text(), 0)\r\n//     assert.equal($(\".multi-second-ins\").text(), 25)\r\n//     assert.equal($(\".multi-third-ins\").text(), 50)\r\n//     assert.equal($(\".multi-fourth-ins\").text(), 75)\r\n//     assert.equal($(\".multi-fifth-ins\").text(), 100)\r\n//   });\r\n//   it(\"при min = -500 и max = 1000 шкала имеет значения: -500, -125, 250, 625, 1000\", function () {\r\n//     view.scaleMulti(-500, 1000)\r\n//     assert.equal($(\".multi-first-ins\").text(), -500)\r\n//     assert.equal($(\".multi-second-ins\").text(), -125)\r\n//     assert.equal($(\".multi-third-ins\").text(), 250)\r\n//     assert.equal($(\".multi-fourth-ins\").text(), 625)\r\n//     assert.equal($(\".multi-fifth-ins\").text(), 1000)\r\n//   });\r\n//   it(\"при min = 30 и max = 380 шкала имеет значения: 30, 117, 205, 293, 380\", function () {\r\n//     view.scaleMulti(30, 380)\r\n//     assert.equal($(\".multi-first-ins\").text(), 30)\r\n//     assert.equal($(\".multi-second-ins\").text(), 117)\r\n//     assert.equal($(\".multi-third-ins\").text(), 205)\r\n//     assert.equal($(\".multi-fourth-ins\").text(), 293)\r\n//     assert.equal($(\".multi-fifth-ins\").text(), 380)\r\n//   });\r\n// });\r\n\r\n// describe(\"тест прогресс-бара\", function() {\r\n//   it(\"при min = 0, max = 100 и val = 50 progress-bar width: 50%\", function () {\r\n//     view.countProgress(0, 100, 50)\r\n//     assert.equal(progressBarWidth, 50)\r\n//   });\r\n//   it(\"при min = 44, max = 1055.5 и val = 651 progress-bar width: 60%\", function () {\r\n//     view.countProgress(44, 1055.5, 651)\r\n//     assert.equal(Math.round(progressBarWidth), 60)\r\n//   });\r\n//   it(\"при min = 250, max = 200 и val = 60 progress-bar width: 69%\", function () {\r\n//     view.countProgress(-250, 200, 60)\r\n//     assert.equal(Math.round(progressBarWidth), 69)\r\n//   });\r\n//   it(\"при min = 20, max = 280 и val = 215 progress-bar width: 75%\", function () {\r\n//     view.countProgress(20, 280, 215)\r\n//     assert.equal(progressBarWidth, 75)\r\n//   });\r\n// });\r\n\r\n// describe(\"тест расположения bubble single-range\", function() {\r\n//   it(\"при min = 0, max = 10 и val = 6 .bubble-single left: calc(60% + -10px)\", function () {\r\n//     view.getSingleValue(0, 10, 6)\r\n//     assert.equal(countSinglePosition, 'calc(60% + (-10px))')\r\n//   });\r\n//   it(\"при min = 2001, max = 2020 и val = 2007 .bubble-single left: calc(31.57894736842105% + (-2.894736842105263px))\", function () {\r\n//     view.getSingleValue(2001, 2020, 2007)\r\n//     assert.equal(countSinglePosition, 'calc(31.57894736842105% + (-2.894736842105263px))')\r\n//   });\r\n//   it(\"при min = -100, max = 100 и val = 0 .bubble-single left: calc(50% + (-7.5px))\", function () {\r\n//     view.getSingleValue(-100, 100, 0)\r\n//     assert.equal(countSinglePosition, 'calc(50% + (-7.5px))')\r\n//   });\r\n//   it(\"при min = 1.6, max = 3759 и val = 456 .bubble-single left: calc(12.093468888060892% + (1.976632777984777px))\", function () {\r\n//     view.getSingleValue(1.6, 3759, 456)\r\n//     assert.equal(countSinglePosition, 'calc(12.093468888060892% + (1.976632777984777px))')\r\n//   });\r\n// });\r\n\r\n// describe(\"тест расположения bubble multi-range\", function() {\r\n//   it(\"при min = 0, max = 10 и val = 6 .bubble-multi-left left: calc(60% + -10px)\", function () {\r\n//     view.getLeftValue(0, 10, 6)\r\n//     assert.equal(countMultiPosition, 'calc(60% + (-13px))')\r\n//   });\r\n//   it(\"при min = 2001, max = 2020 и val = 2007 .bubble-multi-left left: calc(31.57894736842105% + (-2.894736842105263px))\", function () {\r\n//     view.getLeftValue(2001, 2020, 2007)\r\n//     assert.equal(countMultiPosition, 'calc(31.57894736842105% + (-11.578947368421053px))')\r\n//   });\r\n//   it(\"при min = -100, max = 100 и val = 0 .bubble-multi-right left: calc(50% + (-7.5px))\", function () {\r\n//     view.getRightValue(-100, 100, 0)\r\n//     assert.equal(countMultiPosition, 'calc(50% + (-12.5px))')\r\n//   });\r\n//   it(\"при min = 1.6, max = 3759 и val = 456 .bubble-multi-right left: calc(12.093468888060892% + (1.976632777984777px))\", function () {\r\n//     view.getRightValue(1.6, 3759, 456)\r\n//     assert.equal(countMultiPosition, 'calc(12.093468888060892% + (-10.604673444403044px))')\r\n//   });\r\n// });\r\n\r\n// //CONTROLLER\r\n\r\n// describe(\"тест добавления eventListener для multirange-slider\", function() {\r\n//   it('addEventListener при вызове controller.inTouchLeft()', function() {\r\n//     sinon.spy(inputLeft, 'addEventListener')\r\n//     expect(inputLeft.addEventListener.calledOnce).not.to.be.true\r\n//     controller.inTouchLeft()\r\n//     expect(inputLeft.addEventListener.calledOnce).to.be.true\r\n//   })\r\n//   it('addEventListener при вызове controller.inTouchRight()', function() {\r\n//     sinon.spy(inputRight, 'addEventListener')\r\n//     expect(inputRight.addEventListener.calledOnce).not.to.be.true\r\n//     controller.inTouchRight()\r\n//     expect(inputRight.addEventListener.calledOnce).to.be.true\r\n//   })\r\n//   it('addEventListener при вызове controller.inMoveLeft()', function() {\r\n//     // sinon.spy(inputLeft, 'addEventListener')\r\n//     expect(inputLeft.addEventListener.calledTwice).not.to.be.true\r\n//     controller.inMoveLeft()\r\n//     expect(inputLeft.addEventListener.calledTwice).to.be.true\r\n//   })\r\n//   it('addEventListener при вызове controller.inMoveRight()', function() {\r\n//     // sinon.spy(inputRight, 'addEventListener')\r\n//     expect(inputRight.addEventListener.calledTwice).not.to.be.true\r\n//     controller.inMoveRight()\r\n//     expect(inputRight.addEventListener.calledTwice).to.be.true\r\n//   })\r\n//   it('addEventListener при вызове controller.inGetLeft()', function() {\r\n//     // sinon.spy(inputLeft, 'addEventListener')\r\n//     expect(inputLeft.addEventListener.calledThrice).not.to.be.true\r\n//     controller.inGetLeft()\r\n//     expect(inputLeft.addEventListener.calledThrice).to.be.true\r\n//   })\r\n//   it('addEventListener при вызове controller.inGetRight()', function() {\r\n//     // sinon.spy(inputRight, 'addEventListener')\r\n//     expect(inputRight.addEventListener.calledThrice).not.to.be.true\r\n//     controller.inGetRight()\r\n//     expect(inputRight.addEventListener.calledThrice).to.be.true\r\n//   })\r\n// });\r\n"]}